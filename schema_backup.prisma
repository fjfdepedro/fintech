generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id         String      @id @default(cuid())
  email      String      @unique
  name       String?
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  portfolios Portfolio[]
  watchlists Watchlist[]
}

model Watchlist {
  id        String   @id @default(cuid())
  name      String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  symbols   Symbol[] @relation("SymbolToWatchlist")
}

model Symbol {
  id         String      @id @default(cuid())
  symbol     String
  name       String?
  type       SymbolType
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  portfolios Portfolio[] @relation("PortfolioToSymbol")
  watchlists Watchlist[] @relation("SymbolToWatchlist")
}

model Portfolio {
  id        String   @id @default(cuid())
  name      String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  symbols   Symbol[] @relation("PortfolioToSymbol")
}

model MarketData {
  id         String   @id @default(cuid())
  symbol     String
  name       String
  price      Float
  change     Float
  volume     String
  market_cap Float
  type       String
  timestamp  DateTime @default(now())
}

model apiLimit {
  id           String   @id @default(cuid())
  apiName      String   @unique
  dailyLimit   Int
  requestCount Int      @default(0)
  lastReset    DateTime @default(now())
}

model Article {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([createdAt])
}

enum SymbolType {
  STOCK
  CRYPTO
  ETF
  FOREX
}


